# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the following files:
#  .idea/
#  *.iml
#  *.ipr
#  *.iws
#  .idea/

# Playwright
# Playwright browsers and test results
test-results/
playwright-report/
playwright/.cache/
node_modules/

# Playwright screenshots and videos
screenshots/
videos/
traces/

# AWS and Cloud specific
# AWS credentials and config files
.aws/
aws-credentials.json
aws-config.json

# AWS CLI cache
.aws/cli/cache/

# AWS SAM
.aws-sam/

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# CloudFormation
*.template
*.yaml
*.yml
!template.yaml
!template.yml

# Docker
Dockerfile
docker-compose.yml
docker-compose.yaml
.dockerignore

# IDE and Editor files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
*.lnk

# Temporary files
*.tmp
*.temp
temp/
tmp/

# Log files
*.log
logs/

# Configuration files with sensitive data
config.json
secrets.json
credentials.json
*.key
*.pem
*.p12
*.pfx

# Generated files
*.generated.*
generated/

# Test output files
test_output/
test_results/
coverage/

# Screenshots and images (except templates)
*.png
*.jpg
*.jpeg
*.gif
*.bmp
*.svg
!templates/*.png
!templates/*.jpg
!templates/*.jpeg
!templates/*.gif
!templates/*.bmp
!templates/*.svg

# URL files generated by the automation
*_url.txt
*_estimate_url.txt
estimate_urls.txt

# Configuration files generated by the automation
*_config.json
*_service_config.json
service_configs.json

# Element mapping files (large JSON files)
*_complete_elements_map.json
*_elements_map.json
element_maps/

# Screenshots taken during automation
*_config_page.png
*_page.png
screenshots/

# Browser automation artifacts
browser_data/
playwright_browsers/
chromium/
firefox/
webkit/

# Node.js (for Playwright)
package.json
package-lock.json
yarn.lock

# Python virtual environment
venv/
env/
ENV/
.venv/
.env/

# Jupyter notebooks checkpoints
.ipynb_checkpoints/

# pytest
.pytest_cache/

# Coverage reports
htmlcov/
.coverage
coverage.xml

# MyPy
.mypy_cache/

# Pylint
.pylint.d/

# Flake8
.flake8

# Black
.black

# isort
.isort.cfg

# Pre-commit
.pre-commit-config.yaml

# Local development files
local_*
dev_*
debug_*

# Backup files
*.bak
*.backup
*.old

# Archive files
*.zip
*.tar
*.tar.gz
*.rar
*.7z

# Database files
*.db
*.sqlite
*.sqlite3

# Certificate files
*.crt
*.cer
*.der

# Private keys
*.key
*.pem
*.p12
*.pfx

# Environment variables
.env.local
.env.development
.env.test
.env.production

# IDE workspace files
*.code-workspace
*.sublime-project
*.sublime-workspace

# JetBrains IDEs
.idea/
*.iml
*.ipr
*.iws

# Visual Studio Code
.vscode/
*.code-workspace

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# MacOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# Project specific
# AWS service configuration files (keep templates, ignore generated)
aws_services/*/run_*.py
aws_services/*/test_*.py
aws_services/*/search_*.py
aws_services/*/find_*.py
aws_services/*/explore_*.py
aws_services/*/check_*.py
aws_services/*/simple_*.py
aws_services/*/direct_*.py

# Generated automation files
*_estimate_url.txt
*_url.txt
*_config.json
*_service_config.json
*_complete_elements_map.json
*_elements_map.json
*_config_page.png
*_page.png
*_discovery.json
*_exploration_results.json

# Keep important template files
!aws_services/*/README*.md
!aws_services/*/template_*.json
!aws_services/*/example_*.json
!aws_services/*/sample_*.json

# Keep configuration templates
!*_configs.json
!*_configs_template.json
!*_presets.json

# Keep base classes and utilities
!base_*.py
!utils/
!common/

# Keep documentation
!README*.md
!docs/
!*.md

# Keep requirements and setup files
!requirements*.txt
!setup.py
!pyproject.toml
!Pipfile
!poetry.lock

# Keep Docker files if needed
!Dockerfile
!docker-compose.yml
!docker-compose.yaml
!.dockerignore

# Keep CI/CD files
!.github/
!.gitlab-ci.yml
!Jenkinsfile
!azure-pipelines.yml

# Keep license and contributing files
!LICENSE*
!CONTRIBUTING*
!CHANGELOG*
!HISTORY*
